name: Build and Deploy React App to EC2


on:
  push:
    branches:
      - main  # Trigger on push to the main branch
jobs:
  # Job 1: Build the python app
  build:
    runs-on: ubuntu-latest
    name: Build python App

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Save artifact (flask app files)
        uses: actions/upload-artifact@v3
        with:
          name: flask-app-files  # This is the name of the artifact
          path: .
  deploy:
    runs-on: ubuntu-latest
    needs: build  # This ensures deploy job only runs after build job successfully completes
    name: Deploy to EC2

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: flask-app-files
      
        
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_PWD }}
          aws-region: us-west-2
          
      - name: Build & Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # The private SSH key for accessing EC2
          HOSTNAME: ${{ secrets.SSH_HOST }}           # The EC2 instance IP or hostname
          USER_NAME: ${{ secrets.USER_NAME }}         # The SSH username for the EC2 instance (e.g., ec2-user, ubuntu)
        run: |
          # Save the private SSH 
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          
          # scp -o StrictHostKeyChecking=no -i private_key -r /home/runner/work/pythontest/* ${USER_NAME}@${HOSTNAME}:/home/ubuntu/python
          # SSH into EC2 and perform the deployment steps
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
            cd /home/ubuntu/python/
            pip install -r requirements.txt
            cd /home/ubuntu/python/pythontest/src
            python3 app.py

            '
